<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAyMgAAAEAIABuBwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAADIAAAAyAgDAAAAmoZerAAAAAFz
        UkdCAdnJLH8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAJPUExURQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29gAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgICAgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29gAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAPX19QAAAAAAALGYj6YAAADFdFJOUwAIBnF3IH/w8YUiA3DU/9x0BUvs
        VAFX5FlG4kwsyfzNLjrX3T8dxvvKHoyeKCeu87AlBKD096YmmJQWEIDh5l4Rfe5+Agl1B0Pa3knA6epQ
        AT3M0aj2+awXu74tsboksrQVexSJ4I0Ln6cMUfpSQdJ82YIr4+sqvCnHyzD6/TYSmp0TD614DaX+9Q74
        h1hgW10vQKs+GtP7GcKp7ZCS23Nh5WNWWrnBs7U4Ob2GiBivG4+i1e9s1hwfBnl6dm5tZd9yATI1tBNX
        8AAAA+dJREFUeJzt2/dX01AYxnFaUNTiRUSsIha34gLrrhONilsc4KgDCuLAvVFUcKK4V91774l7oH+Y
        6TpqqWmSJve9ep7PzxzO8z1NTtIQ4uIAAAAAAAAAAAAAAAAAAAAA4O8sFuoFxrDGJ1ipNxihUePEJk2b
        Ua+InS2pOWPJLVKod8SsZSqTpbai3hGjtNZ25mdvk0a9JSZtk1lQejvqLbHIaO8IhbDMDtRr9OvYyfEr
        hHXuQr1Hr67duv8ewnpkUS/SJ6unw/FHCOvVm3qTHn36JrIw2Tn9qFdp5+w/wBEewgYOclLv0mrwkLDD
        Kmioi3qZNsOGj4gcMnLUaOptmuSOiRARuMSPlajHqTcuPuKnETR+HPU+tSbkTVQKmTT5XylpNaW7Ugjr
        1pp6oSppbacqRPhNm26bQT0zuvyZSp9GwKx/4LbLNXtO9JCCwrnUO6PJmBf5+hFu/gLqpcqy3Coi/BYu
        ot6qaLGaTyNgCfVWBUUJqg6roGJhzxNPSamWkJFLPdSLIytbpj4iYPkK6s2ROFcO1BpSvkrAryfW1Ws0
        HFZBnfLEeyq8dp2W8yMkeT317nAbNmqv8NmUQb38T5sX6utgbItQJVu36Tisgio2U6//ZXvFDv0hlZk7
        qfeH7Nqtu8Kvqpq6IGBPYWwdjO0dRt3gU5Sg+UIYrmBfEXVFXNz+A9n6z4+ggzWDDlF3pKw/HGuGT2Ut
        8R8ZLUcaPKnWJ/GIjbKjukTnBb0h+1HKm/pj6TGfHyGO9sfJMqQT6UZl+NhPED0VtuavM7JDvhU+SXNT
        n3+qwNiQ8sLTFB1nzp4ztkM+T5p7+XdsOG90hs957jf1nuXlZoSUX+B8s2IpTjWjg7GLuVzfUvNcMuTG
        JBLHZZ6fSW2iYRfCBrJL+D0jaqnuibtevN4jKku6Ym7IpKtlXEKulYa/Y2K06zc4ZNhumhsRcMv088S2
        9TaPkDsLzP56svpuDY+Qw/fyzO24n2n2+RGy5oGZHb0fconwm2LiW2opj5rwC6l5bNrziCdPOR1WQe5n
        5nRUP+d1foS8MOfPpUdf8ozwefXajI6uQ6qeRpGT41Yd+2ax250jU/x9pxqZEDLBU+2Kwuutq1Ub8vht
        XZ1XpvgL5xL8C02azOm0rlUbMtbyzmqT8V+qivRebcgHsV9tRIho/p+QBISIBSGikT4iRCwIEY3UAiFi
        QYhopKsIEQtCRCPFI0QsCBGNlIQQsSBENNInhIgFIaKRPiNELAgRDUJEgxDRIEQ0CBENQkSDENEgRDS2
        L19lpVH4fuabqC8BBtS7vst+ROH7GW899VYAAAAAAAAAAAAAAAAAAADNfgIAJmzfh5DkTQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>